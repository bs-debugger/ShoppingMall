<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.AccountLogMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.model.AccountLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="pre_amount" jdbcType="DECIMAL" property="preAmount" />
    <result column="after_amount" jdbcType="DECIMAL" property="afterAmount" />
    <result column="operate_amount" jdbcType="DECIMAL" property="operateAmount" />
    <result column="operate_type" jdbcType="TINYINT" property="operateType" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pre_gold" jdbcType="INTEGER" property="preGold" />
    <result column="after_gold" jdbcType="INTEGER" property="afterGold" />
    <result column="operate_gold" jdbcType="INTEGER" property="operateGold" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="cash_apply_id" jdbcType="BIGINT" property="cashApplyId" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="order_coupon_code" jdbcType="VARCHAR" property="orderCouponCode" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, user_name, account_id, account_name, pre_amount, after_amount, operate_amount, 
    operate_type, remark, create_time,pre_gold,after_gold,operate_gold,type,cash_apply_id,order_Id,update_time,
    order_coupon_code
  </sql>

  <resultMap id="CashApplyAndLog" type="com.xq.live.vo.out.AccountLogOut" extends="BaseResultMap">
    <result column="apply_status" jdbcType="TINYINT" property="applyStatus" />
    <result column="paid_time" jdbcType="TIMESTAMP" property="paidTime" />
    <result column="apply_type" jdbcType="INTEGER" property="applyType" />
    <result column="ags_state" jdbcType="INTEGER" property="actGoodsSkuState" />
    <result column="ao_state" jdbcType="INTEGER" property="actOrderState" />
    <collection property="user" ofType="com.xq.live.model.User">
      <result column="from_user_name" jdbcType="VARCHAR" property="userName" />
      <result column="from_nick_name" jdbcType="VARCHAR" property="nickName" />
      <result column="from_icon_url" jdbcType="VARCHAR" property="iconUrl" />
    </collection>
  </resultMap>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from account_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xq.live.model.AccountLog">
    insert into account_log (id, user_id, user_name, 
      account_id, account_name, pre_amount, 
      after_amount, operate_amount, pre_gold,
    after_gold, operate_gold,operate_type,
      remark, create_time,type,cash_apply_id,order_id,update_time,order_coupon_code)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, 
      #{accountId,jdbcType=BIGINT}, #{accountName,jdbcType=VARCHAR}, #{preAmount,jdbcType=DECIMAL}, 
      #{afterAmount,jdbcType=DECIMAL}, #{operateAmount,jdbcType=DECIMAL},#{preGold,jdbcType=DECIMAL},
      #{afterGold,jdbcType=DECIMAL}, #{operateGold,jdbcType=DECIMAL}, #{operateType,jdbcType=TINYINT},
      #{remark,jdbcType=VARCHAR}, now(),#{type,jdbcType=INTEGER},#{cashApplyId,jdbcType=BIGINT},#{orderId,jdbcType=BIGINT},now(), #{orderCouponCode,jdbcType=VARCHAR})
      <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
        select last_insert_id() as id
      </selectKey>
  </insert>

  <select id="listTotal" parameterType="com.xq.live.vo.in.AccountLogInVo" resultType="java.lang.Integer">
    select count(1)
    from account_log
    <where>
      <if test="id != null">
         and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userId != null">
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="operateType != null">
        and operate_type = #{operateType,jdbcType=INTEGER}
      </if>
      <if test="type != null">
        and type = #{type,jdbcType=INTEGER}
      </if>
      <if test="accountId !=null">
        AND account_id=#{accountId,jdbcType=BIGINT}
      </if>
    </where>
  </select>

  <select id="list" parameterType="com.xq.live.vo.in.AccountLogInVo" resultMap="CashApplyAndLog">
    select al.id, al.user_id, al.user_name, al.account_id, al.account_name, al.pre_amount, al.after_amount,
    al.operate_amount,al.operate_type, al.remark, al.create_time,al.pre_gold,al.after_gold,al.operate_gold,
    al.type,al.cash_apply_id,al.order_id,al.update_time,al.order_coupon_code,
    us.user_name from_user_name,us.icon_url from_icon_url ,us.nick_name from_nick_name,
    ca.apply_status,
    ca.paid_time,
    ca.apply_type,
    ags.state ags_state,
    ao.state ao_state
    from account_log al
    left join cash_apply ca
    on al.cash_apply_id=ca.id
    left join order_info oi
    on al.order_id=oi.id
    left join user us
    on oi.user_id=us.id
    left join act_order ao
    on ao.order_id=al.order_id
    left join act_goods_sku ags
    on ags.id=ao.act_goods_sku_id
    <where>
      <if test="id != null">
        and al.id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userId != null">
        and al.user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="operateType != null">
        and al.operate_type = #{operateType,jdbcType=INTEGER}
      </if>
      <if test="type != null">
        and al.type = #{type,jdbcType=INTEGER}
      </if>
      <if test="actGoodsSkuId != null">
        and ao.act_goods_sku_id = #{actGoodsSkuId,jdbcType=BIGINT}
      </if>
      <if test="actGoodsSkuState != null">
        and ags.state = #{actGoodsSkuState,jdbcType=INTEGER}
      </if>
      <if test="actOrderState != null">
        and ao.state = #{actOrderState,jdbcType=INTEGER}
      </if>
      <if test="accountId !=null">
        AND al.account_id=#{accountId,jdbcType=BIGINT}
      </if>
    </where>
    order by id desc
    limit #{start}, #{rows}
  </select>

  <insert id="insertSelective" parameterType="com.xq.live.model.AccountLog">
    insert into account_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="preAmount != null">
        pre_amount,
      </if>
      <if test="afterAmount != null">
        after_amount,
      </if>
      <if test="operateAmount != null">
        operate_amount,
      </if>
      <if test="operateType != null">
        operate_type,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="cashApplyId != null">
        cash_apply_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="orderCouponCode != null">
        order_coupon_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="preAmount != null">
        #{preAmount,jdbcType=DECIMAL},
      </if>
      <if test="afterAmount != null">
        #{afterAmount,jdbcType=DECIMAL},
      </if>
      <if test="operateAmount != null">
        #{operateAmount,jdbcType=DECIMAL},
      </if>
      <if test="operateType != null">
        #{operateType,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="cashApplyId != null">
        #{cashApplyId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderCouponCode != null">
        #{orderCouponCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.AccountLog">
    update account_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="preAmount != null">
        pre_amount = #{preAmount,jdbcType=DECIMAL},
      </if>
      <if test="afterAmount != null">
        after_amount = #{afterAmount,jdbcType=DECIMAL},
      </if>
      <if test="operateAmount != null">
        operate_amount = #{operateAmount,jdbcType=DECIMAL},
      </if>
      <if test="operateType != null">
        operate_type = #{operateType,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="cashApplyId != null">
         cash_apply_id = #{cashApplyId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        order_id= #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderCouponCode != null">
        order_coupon_code = #{orderCouponCode,jdbcType=VARCHAR},
      </if>
      update_time = now()
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.live.model.AccountLog">
    update account_log
    set user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=BIGINT},
      account_name = #{accountName,jdbcType=VARCHAR},
      pre_amount = #{preAmount,jdbcType=DECIMAL},
      after_amount = #{afterAmount,jdbcType=DECIMAL},
      operate_amount = #{operateAmount,jdbcType=DECIMAL},
      operate_type = #{operateType,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      type = #{createtypeTime,jdbcType=INTEGER},
      cash_apply_id = #{cashApplyId,jdbcType=BIGINT},
      order_id= #{orderId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      order_coupon_code = #{orderCouponCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--查询商家一段时间内的非订单产生的日志（补偿的费用已经扣除的费用等）-->
  <select id="selectSpecialLog" parameterType="com.xq.live.vo.in.ShopAccountInVo" resultMap="BaseResultMap">
    select * from account_log
    where type=1
    and  order_coupon_code is null
    and remark not like '%提现%'
    and user_id=#{userId,jdbcType=BIGINT}
    <if test="startTime !=null and endTime != null">
      and (DATE_FORMAT(#{startTime,jdbcType=VARCHAR},'%Y-%m-%d %H:%i:%s')
      and DATE_FORMAT(#{endTime,jdbcType=VARCHAR},'%Y-%m-%d %H:%i:%s'))
    </if>
    limit #{start}, #{rows}
  </select>
  <select id="selectSpecialLogTotal" parameterType="com.xq.live.vo.in.ShopAccountInVo" resultType="java.lang.Integer">
    select count(1) from account_log
    where type=1
    and  order_coupon_code is null
    and remark not like '%提现%'
    and user_id=#{userId,jdbcType=BIGINT}
    <if test="startTime !=null and endTime != null">
      and (DATE_FORMAT(#{startTime,jdbcType=VARCHAR},'%Y-%m-%d %H:%i:%s')
      and DATE_FORMAT(#{endTime,jdbcType=VARCHAR},'%Y-%m-%d %H:%i:%s'))
    </if>
  </select>

</mapper>
