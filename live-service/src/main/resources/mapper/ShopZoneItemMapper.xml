<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.ShopZoneItemMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.model.ShopZoneItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="shop_zone_id" jdbcType="BIGINT" property="shopZoneId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="location_x" jdbcType="DECIMAL" property="locationX" />
    <result column="location_y" jdbcType="DECIMAL" property="locationY" />
    <result column="zone_info" jdbcType="VARCHAR" property="zoneInfo" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <resultMap id="ShopZoneItemOutResultMap" type="com.xq.live.vo.out.ShopZoneItemOut" extends="BaseResultMap">
    <result column="distance" jdbcType="INTEGER" property="distance" />
  </resultMap>

  <sql id="Base_Column_List">
    id, shop_zone_id, name, pic_url, address, phone, location_x, location_y, zone_info, 
    is_deleted, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop_zone_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from shop_zone_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xq.live.model.ShopZoneItem">
    insert into shop_zone_item (id, shop_zone_id, name, 
      pic_url, address, phone, 
      location_x, location_y, zone_info, 
      is_deleted, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{shopZoneId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{picUrl,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{locationX,jdbcType=DECIMAL}, #{locationY,jdbcType=DECIMAL}, #{zoneInfo,jdbcType=VARCHAR}, 
      #{isDeleted,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.model.ShopZoneItem">
    insert into shop_zone_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shopZoneId != null">
        shop_zone_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="picUrl != null">
        pic_url,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="locationX != null">
        location_x,
      </if>
      <if test="locationY != null">
        location_y,
      </if>
      <if test="zoneInfo != null">
        zone_info,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="shopZoneId != null">
        #{shopZoneId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null">
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="locationX != null">
        #{locationX,jdbcType=DECIMAL},
      </if>
      <if test="locationY != null">
        #{locationY,jdbcType=DECIMAL},
      </if>
      <if test="zoneInfo != null">
        #{zoneInfo,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.ShopZoneItem">
    update shop_zone_item
    <set>
      <if test="shopZoneId != null">
        shop_zone_id = #{shopZoneId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null">
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="locationX != null">
        location_x = #{locationX,jdbcType=DECIMAL},
      </if>
      <if test="locationY != null">
        location_y = #{locationY,jdbcType=DECIMAL},
      </if>
      <if test="zoneInfo != null">
        zone_info = #{zoneInfo,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.live.model.ShopZoneItem">
    update shop_zone_item
    set shop_zone_id = #{shopZoneId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      location_x = #{locationX,jdbcType=DECIMAL},
      location_y = #{locationY,jdbcType=DECIMAL},
      zone_info = #{zoneInfo,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="list" resultMap="ShopZoneItemOutResultMap">
    select szi.*,
    <choose>
      <when test="locationX != null and locationY != null"> ROUND(
        6378.138 * 2 * ASIN(
        SQRT(
        POW(
        SIN(
        (
        <if test="locationY != null">
          #{locationY}
        </if> * PI() / 180 - szi.location_y * PI() / 180
        ) / 2
        ),
        2
        ) + COS(<if test="locationY != null">
          #{locationY}
        </if> * PI() / 180) * COS(szi.location_y * PI() / 180) * POW(
        SIN(
        (
        <if test="locationX != null">
          #{locationX}
        </if> * PI() / 180 - szi.location_x * PI() / 180
        ) / 2
        ),
        2
        )
        )
        ) * 1000
        )</when>
      <when test="locationX == null or locationY == null">0</when>
    </choose>
    AS distance
    from shop_zone_item szi
    INNER JOIN shop_zone sz on sz.id=szi.shop_zone_id
    <where>
      1=1
      <if test="shopZoneId != null">
        and szi.shop_zone_id = #{shopZoneId,jdbcType=BIGINT}
      </if>
      <if test="name != null">
        and szi.name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="picUrl != null">
        and szi.pic_url = #{picUrl,jdbcType=VARCHAR}
      </if>
      <if test="address != null">
        and szi.address = #{address,jdbcType=VARCHAR}
      </if>
      <if test="phone != null">
        and szi.phone = #{phone,jdbcType=VARCHAR}
      </if>
      <if test="zoneInfo != null">
        and szi.zone_info = #{zoneInfo,jdbcType=VARCHAR}
      </if>
      <if test="isDeleted != null">
        and szi.is_deleted = #{isDeleted,jdbcType=INTEGER}
      </if>
      <if test="createTime != null">
        and szi.create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null">
        and szi.update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="city != null">
        and sz.city = #{city,jdbcType=VARCHAR}
      </if>
      <if test="regionName != null">
        and sz.region_name = #{regionName,jdbcType=VARCHAR}
      </if>
      AND sz.is_deleted=0
      and szi.is_deleted = 0
    </where>
    order by distance,szi.id
    limit #{start}, #{rows}
  </select>

  <select id="listTotal" resultType="java.lang.Integer">
    select count(1)
    from shop_zone_item szi
    INNER JOIN shop_zone sz on sz.id=szi.shop_zone_id
    <where>
      1=1
      <if test="shopZoneId != null">
        and szi.shop_zone_id = #{shopZoneId,jdbcType=BIGINT}
      </if>
      <if test="name != null">
        and szi.name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="picUrl != null">
        and szi.pic_url = #{picUrl,jdbcType=VARCHAR}
      </if>
      <if test="address != null">
        and szi.address = #{address,jdbcType=VARCHAR}
      </if>
      <if test="phone != null">
        and szi.phone = #{phone,jdbcType=VARCHAR}
      </if>
      <if test="zoneInfo != null">
        and szi.zone_info = #{zoneInfo,jdbcType=VARCHAR}
      </if>
      <if test="isDeleted != null">
        and szi.is_deleted = #{isDeleted,jdbcType=INTEGER}
      </if>
      <if test="createTime != null">
        and szi.create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null">
        and szi.update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="city != null">
        and sz.city = #{city,jdbcType=VARCHAR}
      </if>
      <if test="regionName != null">
        and sz.region_name = #{regionName,jdbcType=VARCHAR}
      </if>
      AND sz.is_deleted=0
      and szi.is_deleted = 0
    </where>
  </select>
</mapper>
