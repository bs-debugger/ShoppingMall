<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.GoldLogMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.model.GoldLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="ref_id" jdbcType="BIGINT" property="refId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="gold_amount" jdbcType="INTEGER" property="goldAmount" />
    <result column="state_type" jdbcType="TINYINT" property="stateType" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="paid_time" jdbcType="TIMESTAMP" property="paidTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />

  </resultMap>
  <sql id="Base_Column_List">
    id, shop_id, user_id, ref_id, type, parent_id, gold_amount, state_type, is_delete, 
    paid_time, create_time, update_time,group_id
  </sql>



  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gold_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from gold_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xq.live.model.GoldLog">
    insert into gold_log (id, shop_id, user_id, 
      ref_id, type, parent_id, 
      gold_amount, state_type, is_delete, 
      paid_time, create_time, update_time,group_id
      )
    values (#{id,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{refId,jdbcType=BIGINT}, #{type,jdbcType=TINYINT}, #{parentId,jdbcType=BIGINT}, 
      #{goldAmount,jdbcType=INTEGER}, #{stateType,jdbcType=TINYINT}, #{isDelete,jdbcType=TINYINT}, 
      #{paidTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},#{groupId,jdbcType=INTEGER}
      )
    <selectKey resultType="java.lang.Long" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.model.GoldLog">
    insert into gold_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="refId != null">
        ref_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="goldAmount != null">
        gold_amount,
      </if>
      <if test="stateType != null">
        state_type,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="paidTime != null">
        paid_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="refId != null">
        #{refId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="goldAmount != null">
        #{goldAmount,jdbcType=INTEGER},
      </if>
      <if test="stateType != null">
        #{stateType,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="paidTime != null">
        #{paidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.GoldLog">
    update gold_log
    <set>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="refId != null">
        ref_id = #{refId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="goldAmount != null">
        gold_amount = #{goldAmount,jdbcType=INTEGER},
      </if>
      <if test="stateType != null">
        state_type = #{stateType,jdbcType=TINYINT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="paidTime != null">
        paid_time = #{paidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="groupId != null">
        group_id= #{groupId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.live.model.GoldLog">
    update gold_log
    set shop_id = #{shopId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      ref_id = #{refId,jdbcType=BIGINT},
      type = #{type,jdbcType=TINYINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      gold_amount = #{goldAmount,jdbcType=INTEGER},
      state_type = #{stateType,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT},
      paid_time = #{paidTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      group_id= #{groupId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--插入发起人的第一条记录-->
  <insert id="insertforparent" parameterType="com.xq.live.vo.in.GoldLogInVo">
    insert into gold_log (id, shop_id, user_id,
    ref_id, type,parent_id,gold_amount, state_type, is_delete,
    create_time,group_id, update_time
    )
    values (#{id,jdbcType=BIGINT}, #{shopId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
    #{refId,jdbcType=BIGINT}, #{type,jdbcType=TINYINT}, #{parentId,jdbcType=BIGINT}, #{goldAmount,jdbcType=INTEGER},
    #{stateType,jdbcType=TINYINT}, #{isDelete,jdbcType=TINYINT},now(),#{groupId,jdbcType=INTEGER}, now()
    )
    <selectKey resultType="java.lang.Long" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
  </insert>

  <!--查询发起人和帮砍人-->
  <select id="teamforparent" parameterType="com.xq.live.vo.in.GoldLogInVo" resultMap="BaseResultMap">
    		SELECT
                id,user_id,gold_amount,group_id
            FROM
                gold_log
            WHERE
                (user_id = #{parentId,jdbcType=BIGINT} OR parent_id = #{parentId,jdbcType=BIGINT})
            AND state_type=0
            AND ref_id = #{refId,jdbcType=BIGINT}
            AND group_id =  #{groupId,jdbcType=INTEGER}
  </select>

  <!--查询用户是否帮忙砍菜领过金币-->
  <select id="getByshiro" parameterType="com.xq.live.vo.in.GoldLogInVo" resultMap="BaseResultMap">
    SELECT
    id,user_id,group_id
    FROM
    gold_log
    WHERE
    user_id=#{userId,jdbcType=BIGINT}
    AND parent_id = #{parentId,jdbcType=BIGINT}
    AND ref_id = #{refId,jdbcType=BIGINT}
    AND group_id =  #{groupId,jdbcType=INTEGER}
  </select>

  <!--查询用户发起过的次数(用来当作小组编号)-->
  <select id="goldTotal" parameterType="com.xq.live.vo.in.GoldLogInVo" resultType="java.lang.Integer">
       		SELECT
                COUNT(id)
            FROM
                gold_log
            WHERE
                user_id = #{userId,jdbcType=BIGINT}
                AND parent_id is NULL;
  </select>
  <!--按小组查询列表-->
  <select id="selectByGroup" parameterType="com.xq.live.vo.in.GoldLogInVo" resultMap="BaseResultMap">
    SELECT
    id,user_id,gold_amount,group_id,create_time
    FROM
    gold_log
    WHERE
    (group_id = #{groupId,jdbcType=INTEGER}
    AND user_id=#{userId,jdbcType=BIGINT}
    AND parent_id is null
    AND ref_id = #{refId,jdbcType=BIGINT})
    OR  (group_id = #{groupId,jdbcType=INTEGER}
    AND parent_id=#{userId,jdbcType=BIGINT}
    AND ref_id = #{refId,jdbcType=BIGINT})
  </select>

  <!--修改用户金币到账状态-->
  <update id="changeState" parameterType="java.util.List">
      UPDATE gold_log
      SET state_type = 1,
       paid_time = now()
      WHERE 1=1
      AND state_type=0
      AND is_delete=0
      AND id IN
      <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
        #{item.id,jdbcType=BIGINT}
      </foreach>
  </update>


</mapper>