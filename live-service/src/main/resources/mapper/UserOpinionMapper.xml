<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.UserOpinionMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.model.UserOpinion">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="pic_ids" jdbcType="VARCHAR" property="picIds" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <resultMap id="UserOpinionOutResultMap" type="com.xq.live.vo.out.UserOpinionOut" extends="BaseResultMap">

  </resultMap>

  <sql id="Base_Column_List">
    id, content, user_id, pic_ids, is_deleted, create_time, update_time,phone
  </sql>

  <!--查看用户本人意见-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_opinion
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_opinion
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xq.live.model.UserOpinion">
    insert into user_opinion (id, content, user_id, 
      pic_ids, is_deleted, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{picIds,jdbcType=VARCHAR}, #{isDeleted,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.model.UserOpinion">
    insert into user_opinion
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="picIds != null">
        pic_ids,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="picIds != null">
        #{picIds,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.UserOpinion">
    update user_opinion
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="picIds != null">
        pic_ids = #{picIds,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.live.model.UserOpinion">
    update user_opinion
    set content = #{content,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      pic_ids = #{picIds,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <!--查看用户本人意见列表条数-->
  <select id="listTotal" resultType="java.lang.Integer">
    select count(1)
    from user_opinion
    <where>
      1=1
      <if test="userId != null">
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      and is_deleted = 0
    </where>
  </select>
  <!--查看用户本人意见列表-->
  <select id="selectByUserId" resultMap="UserOpinionOutResultMap">
    select
    <include refid="Base_Column_List" />
    from user_opinion
    where user_id = #{userId,jdbcType=BIGINT}
    and is_deleted = 0
  </select>
  <!--添加用户反馈数据-->
  <insert id="insertForOpinion" parameterType="com.xq.live.vo.in.UserOpinionInVo">
    insert into user_opinion (id, content, user_id,
    pic_ids,phone, is_deleted, create_time,
    update_time)
    values (#{id,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT},
    #{picIds,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR}, 0, now(),
    now())
    <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
      select last_insert_id() as id
    </selectKey>
  </insert>
  <!--修改意见状态-->
  <update id="updateByUser" parameterType="com.xq.live.vo.in.UserOpinionInVo">
    update user_opinion
    set
    is_deleted = #{isDeleted,jdbcType=INTEGER},
    update_time = now()
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>