<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.GoodsBrandMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.model.GoodsBrand">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="brand_name" jdbcType="VARCHAR" property="brandName" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="sort_num" jdbcType="INTEGER" property="sortNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, brand_name, image_url, is_deleted, sort_num, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_brand
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from goods_brand
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xq.live.model.GoodsBrand">
    insert into goods_brand (id, brand_name, image_url, 
      is_deleted, sort_num, create_time,
      update_time)
    values (#{id,jdbcType=BIGINT}, #{brandName,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR}, 
      #{isDeleted,jdbcType=INTEGER}, #{sortNum,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.model.GoodsBrand">
    insert into goods_brand
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="brandName != null">
        brand_name,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="isDeteled != null">
        is_deleted,
      </if>
      <if test="sortNum != null">
        sort_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="brandName != null">
        #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="isDeteled != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="sortNum != null">
        #{sortNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.GoodsBrand">
    update goods_brand
    <set>
      <if test="brandName != null">
        brand_name = #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="isDeteled != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="sortNum != null">
        sort_num = #{sortNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.live.model.GoodsBrand">
    update goods_brand
    set brand_name = #{brandName,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      sort_num = #{sortNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
