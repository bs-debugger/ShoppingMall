<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.ActOrderMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.model.ActOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="act_goods_sku_id" jdbcType="BIGINT" property="actGoodsSkuId" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="people_num" jdbcType="INTEGER" property="peopleNum" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="ActOrderOutResultMap" extends="BaseResultMap" type="com.xq.live.vo.out.ActOrderOut">
    <association property="actGoodsSku" javaType="com.xq.live.model.ActGoodsSku">
      <id column="ags_id" jdbcType="BIGINT" property="id" />
      <result column="act_id" jdbcType="BIGINT" property="actId" />
      <result column="sku_id" jdbcType="BIGINT" property="skuId" />
      <result column="sku_code" jdbcType="VARCHAR" property="skuCode" />
      <result column="goods_pr_id" jdbcType="BIGINT" property="goodsPrId" />
      <result column="apply_status" jdbcType="TINYINT" property="applyStatus" />
      <result column="people_num" jdbcType="INTEGER" property="peopleNum" />
      <result column="state" jdbcType="INTEGER" property="state" />
      <result column="current_num" jdbcType="INTEGER" property="currentNum" />
      <result column="ags_due_time" jdbcType="TIMESTAMP" property="dueTime" />
    </association>
    <association property="orderInfo" javaType="com.xq.live.model.OrderInfo">
      <result column="oi_order_code" jdbcType="VARCHAR" property="orderCode" />
      <result column="oi_user_id" jdbcType="BIGINT" property="userId" />
      <result column="oi_status" jdbcType="INTEGER" property="status" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, order_id, act_goods_sku_id, state, user_id, parent_id, people_num,
    is_deleted, create_time, update_time
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from act_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from act_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xq.live.model.ActOrder">
    insert into act_order (id, order_id, act_goods_sku_id, 
      state,
      user_id, parent_id, people_num, 
      is_deleted, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{actGoodsSkuId,jdbcType=BIGINT}, 
      #{state,jdbcType=INTEGER},
      #{userId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{peopleNum,jdbcType=INTEGER}, 
      #{isDeleted,jdbcType=INTEGER}, now(), now()
      )
    <selectKey resultType="java.lang.Long" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.model.ActOrder">
    insert into act_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="actGoodsSkuId != null">
        act_goods_sku_id,
      </if>
      <if test="state != null">
        state,
      </if>

      <if test="userId != null">
        user_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="peopleNum != null">
        people_num,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="actGoodsSkuId != null">
        #{actGoodsSkuId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>

      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="peopleNum != null">
        #{peopleNum,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.ActOrder">
    update act_order
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="actGoodsSkuId != null">
        act_goods_sku_id = #{actGoodsSkuId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="peopleNum != null">
        people_num = #{peopleNum,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.live.model.ActOrder">
    update act_order
    set order_id = #{orderId,jdbcType=BIGINT},
      act_goods_sku_id = #{actGoodsSkuId,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      people_num = #{peopleNum,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--增加人数-->
  <update id="updateByPeoPleNum" parameterType="com.xq.live.model.ActOrder">
    update act_order
    <set>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
        people_num = people_num+1,
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
        update_time = now()
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
    and  act_goods_sku_id=#{actGoodsSkuId,jdbcType=BIGINT}
    AND is_deleted=0
  </update>
  <!--修改用户邀请人-->
  <update id="updateUserParent" parameterType="com.xq.live.model.ActOrder">
    update act_order
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      update_time = now()
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
    and  act_goods_sku_id=#{actGoodsSkuId,jdbcType=BIGINT}
    AND state=1
    AND is_deleted=0
  </update>
  <!--支付成功后修改用户状态-->
  <update id="updateUserState" parameterType="com.xq.live.model.ActOrder">
    update act_order
    set
    state = #{state,jdbcType=INTEGER},
    update_time = now()
    where order_id=#{orderId,jdbcType=BIGINT}
  </update>
  <!--团购添加-->
  <insert id="insertOrderLog" parameterType="com.xq.live.model.ActOrder">
    insert into act_order (act_goods_sku_id,
                           state,
                           user_id, parent_id, people_num,
                           is_deleted, create_time, update_time,order_id)
    values ( #{actGoodsSkuId,jdbcType=BIGINT},
            1,
            #{userId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT},0,
            0, now(), now(),#{orderId,jdbcType=BIGINT})
    <selectKey resultType="java.lang.Long" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
  </insert>
  <insert id="batchInsertOrderLog" parameterType="com.xq.live.model.ActOrder">
    insert into act_order (act_goods_sku_id,
    state,
    user_id, parent_id, people_num,
    is_deleted, create_time, update_time,order_id)
    values ( #{actGoodsSkuId,jdbcType=BIGINT},
    1,
    #{userId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT},0,
    0, #{createTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP},#{orderId,jdbcType=BIGINT})
    <selectKey resultType="java.lang.Long" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
  </insert>
  <!--根据团id和用户id查询，避免重复添加-->
  <select id="selectByActGoodsSkuId" parameterType="com.xq.live.model.ActOrder" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from act_order
    where act_goods_sku_id=#{actGoodsSkuId,jdbcType=BIGINT}
    and user_id= #{userId,jdbcType=BIGINT}
    <if test="state != null">
      AND state != 4
    </if>
      AND is_deleted=0
  </select>

  <!--根据团id和用户id查询,不加状态判断-->
  <select id="selectByActGoodsSkuIdNotState" parameterType="com.xq.live.model.ActOrder" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from act_order
    where act_goods_sku_id=#{actGoodsSkuId,jdbcType=BIGINT}
    and user_id= #{userId,jdbcType=BIGINT}
    AND is_deleted=0
  </select>

  <!--二级分销查找一级用户-->
  <select id="selectFirstDistributionByOrderId" parameterType="java.lang.Long" resultMap="ActOrderOutResultMap">
    select s.*,
    ags.id as ags_id,ags.act_id,ags.sku_id,ags.sku_code,ags.goods_pr_id,ags.apply_status,ags.people_num,
    ags.state,ags.current_num
    from act_order s
    left join act_goods_sku ags on s.act_goods_sku_id = ags.id
    where s.order_id=#{orderId,jdbcType=BIGINT}
    and s.is_deleted=0
  </select>

  <!--二级分销查找二级用户-->
  <select id="selectSecondDistributionByOrderId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select s.*
    from act_order s
    left join act_order a on a.parent_id=s.user_id
    where a.order_id=#{orderId,jdbcType=BIGINT} and a.act_goods_sku_id=s.act_goods_sku_id
    and s.is_deleted=0
  </select>

  <!--查找拼团支付过的下级-->
  <select id="selectSubordinate" parameterType="com.xq.live.model.ActOrder" resultMap="BaseResultMap">
    select s.*
    from act_order s
    INNER JOIN order_info oi ON oi.id=s.order_id
    where  s.act_goods_sku_id=#{actGoodsSkuId,jdbcType=BIGINT}
    AND s.parent_id=#{parentId,jdbcType=BIGINT}
    AND oi.status=3
    and s.is_deleted=0
  </select>

  <!--修改活动结束后用户参团状态-->
  <update id="updateOverTimeByStatus" parameterType="com.xq.live.model.ActOrder">
    update act_order
    <set>
      state = 4,
      update_time = now()
    </set>
    where state = 3
    and  act_goods_sku_id=#{actGoodsSkuId,jdbcType=BIGINT}
  </update>

  <!--根据订单范围查找 修改活动库存用-->
  <select id="selectByOrderIdAndAct" parameterType="java.util.List" resultMap="BaseResultMap">
    select s.*
    from act_order s
    where s.order_id IN
    <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </select>

  <!--查找一个团活动下的所有活动订单信息-->
  <select id="selectActOrderByActGoodsSkuId" parameterType="java.lang.Long" resultMap="ActOrderOutResultMap">
    SELECT
        s.*,
        oi.order_code oi_order_code,
        oi.user_id oi_user_id,
        oi.status oi_status,
        ags.people_num ,
        ags.due_time ags_due_time,
        ags.state ,
        ags.current_num
    FROM
        act_order s
    LEFT JOIN order_info oi ON oi.id = s.order_id
    LEFT JOIN act_goods_sku ags ON ags.id = s.act_goods_sku_id
    WHERE
	s.act_goods_sku_id=#{actGoodsSkuId,jdbcType=BIGINT}
	AND s.is_deleted=0
  </select>

  <!--根据传入的订单集合修改删除状态-->
  <update id="updateOrderIsDeleted" parameterType="java.lang.Long">
    update act_order
    set
    is_deleted =1
    WHERE
    order_id=#{orderId,jdbcType=BIGINT}
  </update>

</mapper>
