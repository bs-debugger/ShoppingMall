<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.ShopMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.model.Shop">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="index_url" jdbcType="VARCHAR" property="indexUrl" />
    <result column="logo_url" jdbcType="VARCHAR" property="logoUrl" />
    <result column="small_index_url" jdbcType="VARCHAR" property="smallIndexUrl" />
    <result column="small_logo_url" jdbcType="VARCHAR" property="smallLogoUrl" />
    <result column="shop_info" jdbcType="VARCHAR" property="shopInfo" />
    <result column="location_x" jdbcType="DECIMAL" property="locationX" />
    <result column="location_y" jdbcType="DECIMAL" property="locationY" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="pop_num" jdbcType="INTEGER" property="popNum" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="shop_status" jdbcType="INTEGER" property="shopStatus"/>
    <result column="apply_status" jdbcType="INTEGER" property="applyStatus"/>
    <result column="business_cate" jdbcType="VARCHAR" property="businessCate"/>
    <result column="shop_code" jdbcType="VARCHAR" property="shopCode"/>
    <result column="shop_hours" jdbcType="VARCHAR" property="shopHours" />
    <result column="other_service" jdbcType="VARCHAR" property="otherService" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="is_sub" jdbcType="INTEGER" property="isSub" />
    <result column="shop_cate" jdbcType="VARCHAR" property="shopCate" />
    <result column="create_type" jdbcType="INTEGER" property="createType" />
    <result column="shop_zone_item_id" jdbcType="BIGINT" property="shopZoneItemId" />
  </resultMap>

  <resultMap id="ShopOutResultMap" type="com.xq.live.vo.out.ShopOut" extends="BaseResultMap">
    <result column="distance" jdbcType="INTEGER" property="distance" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />    <!--特色菜名称-->
  </resultMap>

  <resultMap id="ActShopForVoteByShopIdMap" type="com.xq.live.vo.out.ActShopByShopIdOut">
    <result column="act_name" jdbcType="VARCHAR" property="actName" />
    <result column="act_id" jdbcType="BIGINT" property="actId" />
  </resultMap>

  <sql id="Base_Column_List">
    id, shop_name, address, mobile, phone, index_url, small_index_url,logo_url,small_logo_url, shop_info, location_x, location_y,
    is_deleted, pop_num, remark, create_time, update_time,shop_status,apply_status,business_cate,
    shop_code,shop_hours,other_service,city,parent_id,is_sub,shop_cate,shop_zone_item_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectNewShop" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from shop
    where TO_DAYS(create_time) = TO_DAYS(NOW())
  </select>

  <!--商家名查重-->
  <select id="selectByShopName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from shop
    where shop_name = #{shopName,jdbcType=VARCHAR}
  </select>

  <select id="selectDetailById" resultMap="ShopOutResultMap">
    SELECT
    s.id,
    s.shop_name,
    s.address,
    s.mobile,
    s.phone,
    s.index_url,
    s.logo_url,
    s.shop_info,
    s.location_x,
    s.location_y,
    s.is_deleted,
    s.pop_num,
    s.remark,
    s.create_time,
    s.update_time,
    s.shop_status,
    s.apply_status,
    s.business_cate,
    s.shop_code,
    s.shop_hours,
    s.other_service,
    s.city,
    s.shop_cate,
    s.shop_zone_item_id,
    <choose>
      <when test="locationX != null and locationY != null"> ROUND(
        6378.138 * 2 * ASIN(
        SQRT(
        POW(
        SIN(
        (
        <if test="locationY != null">
          #{locationY}
        </if> * PI() / 180 - s.location_y * PI() / 180
        ) / 2
        ),
        2
        ) + COS(<if test="locationY != null">
          #{locationY}
        </if> * PI() / 180) * COS(s.location_y * PI() / 180) * POW(
        SIN(
        (
        <if test="locationX != null">
          #{locationX}
        </if> * PI() / 180 - s.location_x * PI() / 180
        ) / 2
        ),
        2
        )
        )
        ) * 1000
        )</when>
      <when test="locationX == null or locationY == null">0</when>
    </choose>
    AS distance,
    (select u.sku_name from sku u inner join sku_shop ss ON u.id = ss.sku_id where ss.shop_id = s.id limit 1) as sku_name
    FROM
    shop s
    where id = #{id,jdbcType=BIGINT}
    and is_deleted = 0
  </select>

  <select id="selectByParentId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from shop
    where parent_id = #{id,jdbcType=BIGINT}
  </select>

  <select id="getShopByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT
        s.id,
        s.shop_name,
        s.address,
        s.mobile,
        s.phone,
        s.index_url,
        s.logo_url,
        s.shop_info,
        s.location_x,
        s.location_y,
        s.is_deleted,
        s.pop_num,
        s.remark,
        s.create_time,
        s.update_time,
        s.shop_status,
        s.apply_status,
        s.business_cate,
        s.shop_code,
        s.shop_hours,
        s.other_service,
        s.city,
        s.shop_cate,
        s.shop_zone_item_id
    FROM
        shop s inner join user u on s.id = u.shop_id
    where u.id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from shop
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xq.live.model.Shop">
    insert into shop (shop_name, address,
      mobile, phone, index_url,small_index_url,logo_url,small_logo_url,
      shop_info, location_x, location_y, 
      remark, create_time,
      update_time,business_cate,shop_code,shop_hours,other_service,city,shop_cate,shop_zone_item_id)
    values (#{shopName,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
      #{mobile,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{indexUrl,jdbcType=VARCHAR}, #{smallIndexUrl,jdbcType=VARCHAR},
    #{logoUrl,jdbcType=VARCHAR},#{smallLogoUrl,jdbcType=VARCHAR},
      #{shopInfo,jdbcType=VARCHAR}, #{locationX,jdbcType=DECIMAL}, #{locationY,jdbcType=DECIMAL},
      #{remark,jdbcType=VARCHAR}, now(), now(), #{businessCate,jdbcType=VARCHAR},#{shopCode,jdbcType=VARCHAR},#{shopHours,jdbcType=VARCHAR},#{otherService,jdbcType=VARCHAR}
      ,#{city,jdbcType=VARCHAR},#{shopCate,jdbcType=VARCHAR},#{shopZoneItemId,jdbcType=BIGINT})
    <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
  </insert>

  <!-- 插入成功后返回主键ID -->
  <insert id="insertSelective" parameterType="com.xq.live.model.Shop" useGeneratedKeys="true" keyProperty="id">
    insert into shop
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shopName != null">
        shop_name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="indexUrl != null">
        index_url,
      </if>
      <if test="logoUrl != null">
        logo_url,
      </if>
      <if test="smallIndexUrl != null">
        small_index_url,
      </if>
      <if test="smallLogoUrl != null">
        small_logo_url,
      </if>
      <if test="shopInfo != null">
        shop_info,
      </if>
      <if test="locationX != null">
        location_x,
      </if>
      <if test="locationY != null">
        location_y,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="shopStatus != null">
        shop_status,
      </if>
      <if test="applyStatus != null">
        apply_status,
      </if>
      <if test="businessCate != null">
        business_cate,
      </if>
      <if test="shopCode != null">
        shop_code,
      </if>
      <if test="shopHours != null">
        shop_hours,
      </if>
      <if test="otherService != null">
        other_service,
      </if>
      <if test="shopCate != null">
        shop_cate,
      </if>
      <if test="shopZoneItemId != null">
        shop_zone_item_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shopName != null">
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="indexUrl != null">
        #{indexUrl,jdbcType=VARCHAR},
      </if>
      <if test="logoUrl != null">
        #{logoUrl,jdbcType=VARCHAR},
      </if>
      <if test="shopInfo != null">
        #{shopInfo,jdbcType=VARCHAR},
      </if>
      <if test="locationX != null">
        #{locationX,jdbcType=DECIMAL},
      </if>
      <if test="locationY != null">
        #{locationY,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shopStatus != null">
        #{shopStatus,jdbcType=INTEGER},
      </if>
      <if test="applyStatus != null">
        #{applyStatus,jdbcType=INTEGER},
      </if>
      <if test="businessCate != null">
        #{businessCate,jdbcType=VARCHAR},
      </if>
      <if test="shopCode != null">
        #{shopCode,jdbcType=VARCHAR},
      </if>
      <if test="shopHours != null">
        #{shopHours,jdbcType=VARCHAR},
      </if>
      <if test="otherService != null">
        #{otherService,jdbcType=VARCHAR},
      </if>
      <if test="shopCate != null">
        #{shopCate,jdbcType=VARCHAR},
      </if>
      <if test="shopZoneItemId != null">
        #{shopZoneItemId,jdbcType=BIGINT},
      </if>
    </trim>
    <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.Shop">
    update shop
    <set>
      update_time = now(),
      <if test="shopName != null">
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="indexUrl != null">
        index_url = #{indexUrl,jdbcType=VARCHAR},
      </if>
      <if test="logoUrl != null">
        logo_url = #{logoUrl,jdbcType=VARCHAR},
      </if>
      <if test="shopInfo != null">
        shop_info = #{shopInfo,jdbcType=VARCHAR},
      </if>
      <if test="locationX != null">
        location_x = #{locationX,jdbcType=DECIMAL},
      </if>
      <if test="city!=null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="locationY != null">
        location_y = #{locationY,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="shopStatus != null">
        shop_status = #{shopStatus,jdbcType=INTEGER},
      </if>
      <if test="applyStatus != null">
        apply_status = #{applyStatus,jdbcType=INTEGER},
      </if>
      <if test="businessCate != null">
        business_cate = #{businessCate,jdbcType=VARCHAR},
      </if>
      <if test="shopCode != null">
        shop_code = #{shopCode,jdbcType=VARCHAR},
      </if>
      <if test="shopHours != null">
        shop_hours = #{shopHours,jdbcType=VARCHAR},
      </if>
      <if test="otherService != null">
        other_service = #{otherService,jdbcType=VARCHAR},
      </if>
      <if test="shopCate != null">
        shop_cate = #{shopCate,jdbcType=VARCHAR},
      </if>
      <if test="shopZoneItemId != null">
        shop_zone_item_id = #{shopZoneItemId,jdbcType=BIGINT},
      </if>
      <if test="smallIndexUrl != null">
        small_index_url = #{smallIndexUrl,jdbcType=VARCHAR},
      </if>
      <if test="smallLogoUrl != null">
        small_logo_url = #{smallLogoUrl,jdbcType=VARCHAR},
      </if>
      <if test="popNum != null">
        pop_num = #{popNum,jdbcType=INTEGER},
      </if>

    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.live.model.Shop">
    update shop
    set shop_name = #{shopName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      index_url = #{indexUrl,jdbcType=VARCHAR},
      logo_url = #{logoUrl,jdbcType=VARCHAR},
      shop_info = #{shopInfo,jdbcType=VARCHAR},
      location_x = #{locationX,jdbcType=DECIMAL},
      location_y = #{locationY,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      update_time = now(),
      shop_code = #{shopCode,jdbcType=VARCHAR},
      business_cate = #{businessCate,jdbcType=VARCHAR},
      shop_hours = #{shopHours,jdbcType=VARCHAR},
      other_service = #{otherService,jdbcType=VARCHAR},
      shop_cate = #{shopCate,jdbcType=VARCHAR},
      shop_zone_item_id = #{shopZoneItemId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--查看符合条件商家列表-->
  <select id="getSCForList" parameterType="java.util.List" resultMap="ShopOutResultMap">
    SELECT
    s.id,
    s.shop_name,
    s.address,
    s.mobile,
    s.phone,
    s.index_url,
    s.logo_url,
    s.shop_info,
    s.location_x,
    s.location_y,
    s.is_deleted,
    s.pop_num,
    s.remark,
    s.create_time,
    s.update_time,
    s.shop_status,
    s.apply_status,
    s.business_cate,
    s.shop_code,
    s.shop_hours,
    s.other_service,
    s.city,
    s.shop_cate,
    s.shop_zone_item_id,
    (select u.sku_name from sku u inner join sku_shop ss ON u.id = ss.sku_id where ss.shop_id = s.id limit 1) as sku_name
    FROM
    shop s
    <where>
      s.id IN
      <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
        #{item.id,jdbcType=BIGINT}
      </foreach>
      and is_deleted = 0
    </where>
    order by
    pop_num desc
  </select>

  <select id="list" resultMap="ShopOutResultMap">
    SELECT
      s.id,
      s.shop_name,
      s.address,
      s.mobile,
      s.phone,
      s.index_url,
      s.logo_url,
      s.shop_info,
      s.location_x,
      s.location_y,
      s.is_deleted,
      s.pop_num,
      s.remark,
      s.create_time,
      s.update_time,
      s.shop_status,
      s.apply_status,
      s.business_cate,
      s.shop_code,
      s.shop_hours,
      s.other_service,
      s.city,
      s.shop_cate,
      s.small_logo_url,
    s.shop_zone_item_id,
      <choose>
        <when test="locationX != null and locationY != null"> ROUND(
          6378.138 * 2 * ASIN(
          SQRT(
          POW(
          SIN(
          (
          <if test="locationY != null">
            #{locationY}
          </if> * PI() / 180 - s.location_y * PI() / 180
          ) / 2
          ),
          2
          ) + COS(<if test="locationY != null">
            #{locationY}
          </if> * PI() / 180) * COS(s.location_y * PI() / 180) * POW(
          SIN(
          (
          <if test="locationX != null">
            #{locationX}
          </if> * PI() / 180 - s.location_x * PI() / 180
          ) / 2
          ),
          2
          )
          )
          ) * 1000
          )</when>
        <when test="locationX == null or locationY == null">0</when>
      </choose>
      AS distance,
      (select u.sku_name from sku u inner join sku_shop ss ON u.id = ss.sku_id where ss.shop_id = s.id limit 1) as sku_name
      FROM
      shop s
    <where>
      <if test="id != null and id != ''">
        and s.id = #{id}
      </if>
      <if test="searchKey != null and searchKey != ''">
       and (s.id = #{searchKey} or shop_name like concat('%', #{searchKey}, '%'))
      </if>
      <if test="businessCate !=null and businessCate != ''">
        and find_in_set(#{businessCate}, replace(business_cate, '/', ','))
      </if>
      <if test="city !=null and city != ''">
        and city = #{city}
      </if>
      <if test="shopCate != null and shopCate != ''">
        and find_in_set(#{shopCate}, replace(replace(shop_cate, '-', ','), '|', ','))
      </if>
      <if test="shopZoneItemId !=null">
        and (shop_zone_item_id = #{shopZoneItemId})
      </if>
      and is_deleted = 0
    </where>
    order by
    create_type ,
    <if test="browSort != null and browSort == 2 ">
     pop_num desc,
    </if>
     distance
    limit #{start}, #{rows}
  </select>

  <select id="selectNotShop" resultMap="BaseResultMap">
    SELECT
    s.id
    FROM
    shop s
    where
    s.create_type=1
    AND s.id>1220
  </select>

  <select id="listForChuanXiang" resultMap="ShopOutResultMap">
    SELECT
    s.id,
    s.shop_name,
    s.address,
    s.mobile,
    s.phone,
    s.index_url,
    s.logo_url,
    s.shop_info,
    s.location_x,
    s.location_y,
    s.is_deleted,
    s.pop_num,
    s.remark,
    s.create_time,
    s.update_time,
    s.shop_status,
    s.apply_status,
    s.business_cate,
    s.shop_code,
    s.shop_hours,
    s.other_service,
    s.city,
    s.shop_cate,
    s.shop_zone_item_id,
    <choose>
      <when test="locationX != null and locationY != null"> ROUND(
        6378.138 * 2 * ASIN(
        SQRT(
        POW(
        SIN(
        (
        <if test="locationY != null">
          #{locationY}
        </if> * PI() / 180 - s.location_y * PI() / 180
        ) / 2
        ),
        2
        ) + COS(<if test="locationY != null">
          #{locationY}
        </if> * PI() / 180) * COS(s.location_y * PI() / 180) * POW(
        SIN(
        (
        <if test="locationX != null">
          #{locationX}
        </if> * PI() / 180 - s.location_x * PI() / 180
        ) / 2
        ),
        2
        )
        )
        ) * 1000
        )</when>
      <when test="locationX == null or locationY == null">0</when>
    </choose>
    AS distance,
    (select u.sku_name from sku u inner join sku_shop ss ON u.id = ss.sku_id where ss.shop_id = s.id limit 1) as sku_name
    FROM
    shop s
    where ( business_cate like '%川菜%' or business_cate LIKE '%湘菜%' or business_cate LIKE '%川湘菜%')
    and is_deleted = 0
    <if test="city !=null">
      and city = #{city}
    </if>
    order by
    <if test="browSort != null and browSort == 2 ">
      pop_num desc,
    </if>
    distance
    limit #{start}, #{rows}
  </select>

  <select id="listTotal" resultType="java.lang.Integer">
    SELECT
    count(s.id)
    FROM
    shop s
    <where>
      <if test="id != null and id != ''">
        and s.id = #{id}
      </if>
      <if test="searchKey !=null and searchKey != ''">
        and (s.id = #{searchKey} or shop_name like concat('%', #{searchKey}, '%'))
      </if>
      <if test="businessCate !=null and businessCate != ''">
        and find_in_set(#{businessCate}, replace(business_cate, '/', ','))
      </if>
      <if test="city !=null and city != ''">
        and city = #{city}
      </if>
      <if test="shopCate !=null and shopCate != ''">
        and find_in_set(#{shopCate}, replace(replace(shop_cate, '-', ','), '|', ','))
      </if>
      <if test="shopZoneItemId !=null">
        and (shop_zone_item_id = #{shopZoneItemId})
      </if>
      and is_deleted = 0
    </where>
  </select>

  <update id="updatePopNum" parameterType="java.lang.Long">
    update shop set pop_num = pop_num + 1 where id = #{id}
  </update>

  <update id="updateShopCodeByShopId">
    update shop set shop_code = #{shopCode,jdbcType=VARCHAR} where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findShopOutById" resultMap="ShopOutResultMap">
    select
    <include refid="Base_Column_List" />, 0 as distance, '' as sku_name
    from shop
    where
    id = #{id,jdbcType=BIGINT}
  </select>

  <select id="findShopOutByCode" resultMap="ShopOutResultMap">
    select
    <include refid="Base_Column_List"/>, 0 as distance, '' as sku_name
    from shop
    where
    shop_code LIKE  concat('%', #{shopCode,jdbcType=VARCHAR})
  </select>

  <select id="listForActByShopId" resultMap="ActShopForVoteByShopIdMap">
    SELECT a.act_id,
    ai.act_name
    FROM
    act_shop a
    INNER JOIN act_info ai ON a.act_id = ai.id
    where
     <if test="id !=null">
       a.shop_id = #{id,jdbcType=BIGINT}
     </if>
    and a.apply_status = 1 and a.is_luoxuan = 0
    AND ai.is_deleted = 0
    and ai.act_status = 1
    union
    SELECT b.act_id,
    ai.act_name
    FROM
    act_sku b
    INNER JOIN act_info ai ON b.act_id = ai.id where
    <if test="id !=null">
      b.shop_id = #{id,jdbcType=BIGINT}
    </if>
    and b.apply_status = 1 and b.is_luoxuan = 0
    AND ai.is_deleted = 0
    and ai.act_status = 1
    ORDER BY act_id
  </select>


  <select id="listForSkuAllocation" resultMap="ShopOutResultMap">
    SELECT
    distinct s.id,
    s.shop_name,
    s.index_url,
    s.logo_url,
    s.shop_info,
    s.is_deleted,
    s.shop_code,
    s.city,
    s.pop_num,
    s.business_cate,
    s.shop_cate,
    s.shop_zone_item_id,
    (select u.sku_name from sku u inner join sku_shop ss ON u.id = ss.sku_id where ss.shop_id = s.id limit 1) as sku_name,
    <choose>
      <when test="locationX != null and locationY != null"> ROUND(
        6378.138 * 2 * ASIN(
        SQRT(
        POW(
        SIN(
        (
        <if test="locationY != null">
          #{locationY}
        </if> * PI() / 180 - s.location_y * PI() / 180
        ) / 2
        ),
        2
        ) + COS(<if test="locationY != null">
          #{locationY}
        </if> * PI() / 180) * COS(s.location_y * PI() / 180) * POW(
        SIN(
        (
        <if test="locationX != null">
          #{locationX}
        </if> * PI() / 180 - s.location_x * PI() / 180
        ) / 2
        ),
        2
        )
        )
        ) * 1000
        )</when>
      <when test="locationX == null or locationY == null">0</when>
    </choose>
    AS distance
    FROM
    shop s
    inner join sku_shop ss on s.id = ss.shop_id
    inner join sku sk on ss.sku_id = sk.id
    <where>
      1=1
      <if test="searchKey !=null">
        and (s.id = #{searchKey} or s.shop_name like concat('%', #{searchKey}, '%'))
      </if>
      <if test="businessCate !=null">
        and find_in_set(#{businessCate}, replace(business_cate, '/', ','))
      </if>
      <if test="city !=null">
        and s.city = #{city}
      </if>
      and s.is_deleted = 0
      and sk.type = #{type}
      and sk.is_deleted = 0
    </where>
    order by
    <if test="browSort != null and browSort == 2 ">
      pop_num desc,
    </if>
    distance
    limit #{start}, #{rows}
  </select>

  <select id="listTotalForSkuAllocation" resultType="java.lang.Integer">
    select count(distinct s.id)
    from
    shop s
    inner join sku_shop ss on s.id = ss.shop_id
    inner join sku sk on ss.sku_id = sk.id
    <where>
      1=1
      <if test="searchKey !=null">
        and (s.id = #{searchKey} or s.shop_name like concat('%', #{searchKey}, '%'))
      </if>
      <if test="businessCate !=null">
        and find_in_set(#{businessCate}, replace(business_cate, '/', ','))
      </if>
      <if test="city !=null">
        and s.city = #{city}
      </if>
      and s.is_deleted = 0
      and sk.type = #{type}
      and sk.is_deleted = 0
    </where>
  </select>


  <!--商家名查重-->
  <select id="DuplicateCheckingByShopName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from shop
    where shop_name = #{shopName,jdbcType=VARCHAR}
  </select>

  <!--分页查询有活动菜的列表-->
  <select id="listForGoodsSku" resultMap="ShopOutResultMap">
    select * from ( SELECT
    s.id,
    s.shop_name,
    s.address,
    s.mobile,
    s.phone,
    s.index_url,
    s.logo_url,
    s.shop_info,
    s.location_x,
    s.location_y,
    s.is_deleted,
    s.pop_num,
    s.remark,
    s.create_time,
    s.update_time,
    s.shop_status,
    s.apply_status,
    s.business_cate,
    s.shop_code,
    s.shop_hours,
    s.other_service,
    s.city,
    s.shop_cate,
    s.small_logo_url,
    s.shop_zone_item_id,
    <choose>
      <when test="locationX != null and locationY != null"> ROUND(
        6378.138 * 2 * ASIN(
        SQRT(
        POW(
        SIN(
        (
        <if test="locationY != null">
          #{locationY}
        </if> * PI() / 180 - s.location_y * PI() / 180
        ) / 2
        ),
        2
        ) + COS(<if test="locationY != null">
          #{locationY}
        </if> * PI() / 180) * COS(s.location_y * PI() / 180) * POW(
        SIN(
        (
        <if test="locationX != null">
          #{locationX}
        </if> * PI() / 180 - s.location_x * PI() / 180
        ) / 2
        ),
        2
        )
        )
        ) * 1000
        )</when>
      <when test="locationX == null or locationY == null">0</when>
    </choose>
    AS distance,
    (select u.sku_name from sku u inner join sku_shop ss ON u.id = ss.sku_id where ss.shop_id = s.id limit 1) as sku_name,
    (select count(1) from act_goods_sku ags left join goods_sku gs on ags.sku_id=gs.id where gs.is_deleted=0  and ags.act_id=41
      and gs.status=1 and ags.is_deleted=0 and gs.shop_id=s.id) as act_sum
    FROM
    shop s
    <where>
      <if test="id != null and id != ''">
        and s.id = #{id}
      </if>
      <if test="searchKey != null and searchKey != ''">
        and (s.id = #{searchKey} or shop_name like concat('%', #{searchKey}, '%'))
      </if>
      <if test="businessCate !=null and businessCate != ''">
        and find_in_set(#{businessCate}, replace(business_cate, '/', ','))
      </if>
      <if test="city !=null and city != ''">
        and city = #{city}
      </if>
      <if test="shopCate != null and shopCate != ''">
        and find_in_set(#{shopCate}, replace(replace(shop_cate, '-', ','), '|', ','))
      </if>
      <if test="shopZoneItemId !=null">
        and (shop_zone_item_id = #{shopZoneItemId})
      </if>
      and is_deleted = 0
    </where>
    order by
    create_type ,
    <if test="browSort != null and browSort == 2 ">
      pop_num desc,
    </if>
    distance ) cc
    where cc.act_sum>0
    limit #{start}, #{rows}
  </select>

  <!--查询有活动菜的记录总数-->
  <select id="listForGoodsSkuTotal" resultType="java.lang.Integer">
    SELECT count(1) from ( SELECT
    s.id,
    (select count(1) from act_goods_sku ags left join goods_sku gs on ags.sku_id=gs.id where gs.is_deleted=0  and ags.act_id=41
    and gs.status=1 and ags.is_deleted=0 and gs.shop_id=s.id) as act_sum
    FROM
    shop s
    <where>
      <if test="id != null and id != ''">
        and s.id = #{id}
      </if>
      <if test="searchKey !=null and searchKey != ''">
        and (s.id = #{searchKey} or shop_name like concat('%', #{searchKey}, '%'))
      </if>
      <if test="businessCate !=null and businessCate != ''">
        and find_in_set(#{businessCate}, replace(business_cate, '/', ','))
      </if>
      <if test="city !=null and city != ''">
        and city = #{city}
      </if>
      <if test="shopCate !=null and shopCate != ''">
        and find_in_set(#{shopCate}, replace(replace(shop_cate, '-', ','), '|', ','))
      </if>
      <if test="shopZoneItemId !=null">
        and (shop_zone_item_id = #{shopZoneItemId})
      </if>
      and is_deleted = 0
    </where>
    )  cc
    where cc.act_sum>0
  </select>

  <!--分页查询参加了万达权益卡活动的列表-->
  <select id="listForVip" resultMap="ShopOutResultMap">
    select * from ( SELECT
    s.id,
    s.shop_name,
    s.address,
    s.mobile,
    s.phone,
    s.index_url,
    s.logo_url,
    s.shop_info,
    s.location_x,
    s.location_y,
    s.is_deleted,
    s.pop_num,
    s.remark,
    s.create_time,
    s.update_time,
    s.shop_status,
    s.apply_status,
    s.business_cate,
    s.shop_code,
    s.shop_hours,
    s.other_service,
    s.city,
    s.shop_cate,
    s.small_logo_url,
    s.shop_zone_item_id,
    <choose>
      <when test="locationX != null and locationY != null"> ROUND(
        6378.138 * 2 * ASIN(
        SQRT(
        POW(
        SIN(
        (
        <if test="locationY != null">
          #{locationY}
        </if> * PI() / 180 - s.location_y * PI() / 180
        ) / 2
        ),
        2
        ) + COS(<if test="locationY != null">
          #{locationY}
        </if> * PI() / 180) * COS(s.location_y * PI() / 180) * POW(
        SIN(
        (
        <if test="locationX != null">
          #{locationX}
        </if> * PI() / 180 - s.location_x * PI() / 180
        ) / 2
        ),
        2
        )
        )
        ) * 1000
        )</when>
      <when test="locationX == null or locationY == null">0</when>
    </choose>
    AS distance,
    (select u.sku_name from sku u inner join sku_shop ss ON u.id = ss.sku_id where ss.shop_id = s.id limit 1) as sku_name,
    (select count(1) from act_goods_sku ags left join goods_sku gs on ags.sku_id=gs.id where gs.is_deleted=0  and ags.act_id in (48,49)
    and gs.status=1 and ags.is_deleted=0 and gs.shop_id=s.id) as act_sum
    FROM
    shop s
    <where>
      <if test="id != null and id != ''">
        and s.id = #{id}
      </if>
      <if test="searchKey != null and searchKey != ''">
        and (s.id = #{searchKey} or shop_name like concat('%', #{searchKey}, '%'))
      </if>
      <if test="businessCate !=null and businessCate != ''">
        and find_in_set(#{businessCate}, replace(business_cate, '/', ','))
      </if>
      <if test="city !=null and city != ''">
        and city = #{city}
      </if>
      <if test="shopCate != null and shopCate != ''">
        and find_in_set(#{shopCate}, replace(replace(shop_cate, '-', ','), '|', ','))
      </if>
      <if test="shopZoneItemId !=null">
        and (shop_zone_item_id = #{shopZoneItemId})
      </if>
      and is_deleted = 0
    </where>
    order by
    create_type ,
    <if test="browSort != null and browSort == 2 ">
      pop_num desc,
    </if>
    distance ) cc
    where cc.act_sum>0
    limit #{start}, #{rows}
  </select>

  <!--查询参加了万达权益卡活动的记录总数-->
  <select id="listForVipTotal" resultType="java.lang.Integer">
    SELECT count(1) from ( SELECT
    s.id,
    (select count(1) from act_goods_sku ags left join goods_sku gs on ags.sku_id=gs.id where gs.is_deleted=0  and ags.act_id in (48,49)
    and gs.status=1 and ags.is_deleted=0 and gs.shop_id=s.id) as act_sum
    FROM
    shop s
    <where>
      <if test="id != null and id != ''">
        and s.id = #{id}
      </if>
      <if test="searchKey !=null and searchKey != ''">
        and (s.id = #{searchKey} or shop_name like concat('%', #{searchKey}, '%'))
      </if>
      <if test="businessCate !=null and businessCate != ''">
        and find_in_set(#{businessCate}, replace(business_cate, '/', ','))
      </if>
      <if test="city !=null and city != ''">
        and city = #{city}
      </if>
      <if test="shopCate !=null and shopCate != ''">
        and find_in_set(#{shopCate}, replace(replace(shop_cate, '-', ','), '|', ','))
      </if>
      <if test="shopZoneItemId !=null">
        and (shop_zone_item_id = #{shopZoneItemId})
      </if>
      and is_deleted = 0
    </where>
    )  cc
    where cc.act_sum>0
  </select>

</mapper>
