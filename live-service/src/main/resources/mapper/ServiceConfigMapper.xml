<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.ServiceConfigMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.model.ServiceConfig">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="ref_id" jdbcType="BIGINT" property="refId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="service_rate" jdbcType="DECIMAL" property="serviceRate" />
    <result column="user_service_rate" jdbcType="DECIMAL" property="userServiceRate" />
    <result column="service_weight" jdbcType="DECIMAL" property="serviceWeight" />
    <result column="user_service_weight" jdbcType="DECIMAL" property="userServiceWeight" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="sort_num" jdbcType="INTEGER" property="sortNum" />

  </resultMap>
  <sql id="Base_Column_List">
    id, ref_id, type, service_rate,user_service_rate, service_weight,
    user_service_weight,is_deleted, create_time, update_time,sort_num
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from service_config
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from service_config
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xq.live.model.ServiceConfig">
    insert into service_config (id, ref_id, type, 
      service_rate,user_service_rate, service_weight,user_service_weight, is_deleted,
      create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{refId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, 
      #{serviceRate,jdbcType=DECIMAL},#{userServiceRate,jdbcType=DECIMAL}, #{serviceWeight,jdbcType=DECIMAL}, #{userServiceWeight,jdbcType=DECIMAL}, #{isDeleted,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.model.ServiceConfig">
    insert into service_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="refId != null">
        ref_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="serviceRate != null">
        service_rate,
      </if>
      <if test="userServiceRate != null">
        user_service_rate,
      </if>
      <if test="serviceWeight != null">
        service_weight,
      </if>
      <if test="userServiceWeight != null">
        user_service_weight,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="refId != null">
        #{refId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="serviceRate != null">
        #{serviceRate,jdbcType=DECIMAL},
      </if>
      <if test="userServiceRate != null">
        #{userServiceRate,jdbcType=DECIMAL},
      </if>
      <if test="serviceWeight != null">
        #{serviceWeight,jdbcType=DECIMAL},
      </if>
      <if test="userServiceWeight != null">
        #{userServiceWeight,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.model.ServiceConfig">
    update service_config
    <set>
      <if test="refId != null">
        ref_id = #{refId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="serviceRate != null">
        service_rate = #{serviceRate,jdbcType=DECIMAL},
      </if>
      <if test="userServiceRate != null">
        user_service_rate = #{userServiceRate,jdbcType=DECIMAL},
      </if>
      <if test="serviceWeight != null">
        service_weight = #{serviceWeight,jdbcType=DECIMAL},
      </if>
      <if test="userServiceWeight != null">
        user_service_weight = #{userServiceWeight,jdbcType=DECIMAL},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.live.model.ServiceConfig">
    update service_config
    set ref_id = #{refId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      service_rate = #{serviceRate,jdbcType=DECIMAL},
      user_service_rate = #{userServiceRate,jdbcType=DECIMAL},
      service_weight = #{serviceWeight,jdbcType=DECIMAL},
      user_service_weight = #{userServiceWeight,jdbcType=DECIMAL},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="listByRefIdAndType" parameterType="java.util.List" resultMap="BaseResultMap">
    select * from service_config
    where
    <foreach collection="list" index="index" item="item" separator="or">
      (ref_id = #{item.refId} and type = #{item.type})
    </foreach>
    order by sort_num DESC
  </select>
</mapper>
