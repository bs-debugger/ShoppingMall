<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.live.dao.GoodsSpuMapper">
  <resultMap id="BaseResultMap" type="com.xq.live.model.GoodsSpu">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="spu_name" jdbcType="VARCHAR" property="spuName" />
    <result column="spu_code" jdbcType="VARCHAR" property="spuCode" />
    <result column="spu_type" jdbcType="INTEGER" property="spuType" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
    <result column="brand_id" jdbcType="BIGINT" property="brandId" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="GoodsSpuOutResultMap" type="com.xq.live.vo.out.GoodsSpuOut" extends="BaseResultMap">
    <association property="goodsSpuDesc" javaType="com.xq.live.model.GoodsSpuDesc">
      <id column="gsd_id" jdbcType="BIGINT" property="id" />
      <result column="gsd_spu_id" jdbcType="BIGINT" property="spuId" />
      <result column="title" jdbcType="VARCHAR" property="title" />
      <result column="content" jdbcType="LONGVARCHAR" property="content" />
    </association>
    <collection property="goodsSpecs" ofType="com.xq.live.model.GoodsSpec">
      <id column="gsc_id" jdbcType="BIGINT" property="id" />
      <result column="gsc_code" jdbcType="VARCHAR" property="code" />
      <result column="gsc_name" jdbcType="VARCHAR" property="name" />
    </collection>
  </resultMap>

  <sql id="Base_Column_List">
    id, spu_name, spu_code, spu_type,category_id, brand_id, is_deleted,create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_spu
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectDetailById" parameterType="java.lang.Long" resultMap="GoodsSpuOutResultMap">
    select
    gsu.*,
    gsd.id as gsd_id,gsd.spu_id as gsd_spu_id,gsd.title,gsd.content,
    gsc.id as gsc_id,gsc.code as gsc_code,gsc.name as gsc_name
    from goods_spu gsu
    left join goods_spu_desc gsd on gsu.id = gsd.spu_id
    left join goods_spu_spec gss on gsu.id = gss.spu_id
    left join goods_spec gsc on gss.spec_id = gsc.id
    where gsu.id = #{id,jdbcType=BIGINT}
  </select>
  <select id="countTotal" resultType="java.lang.Long">
    select max(id) from goods_spu
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from goods_spu
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xq.live.vo.in.GoodsSpuInVo">
    insert into goods_spu (id, spu_name, spu_code, spu_type,
      category_id, brand_id, is_deleted,create_time,
      update_time)
    values (#{id,jdbcType=BIGINT}, #{spuName,jdbcType=VARCHAR}, #{spuCode,jdbcType=VARCHAR}, #{spuType,jdbcType=INTEGER},
      #{categoryId,jdbcType=BIGINT}, #{brandId,jdbcType=BIGINT},#{isDeleted,jdbcType=INTEGER}, now(),
      now())
    <selectKey resultType="java.lang.Long" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.xq.live.vo.in.GoodsSpuInVo">
    insert into goods_spu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="spuName != null">
        spu_name,
      </if>
      <if test="spuCode != null">
        spu_code,
      </if>
      <if test="spuType != null">
        spu_type,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="spuName != null">
        #{spuName,jdbcType=VARCHAR},
      </if>
      <if test="spuCode != null">
        #{spuCode,jdbcType=VARCHAR},
      </if>
      <if test="spuType != null">
        #{spuType,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xq.live.vo.in.GoodsSpuInVo">
    update goods_spu
    <set>
      <if test="spuName != null">
        spu_name = #{spuName,jdbcType=VARCHAR},
      </if>
      <if test="spuCode != null">
        spu_code = #{spuCode,jdbcType=VARCHAR},
      </if>
      <if test="spuType != null">
        spu_type = #{spuType,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xq.live.vo.in.GoodsSpuInVo">
    update goods_spu
    set spu_name = #{spuName,jdbcType=VARCHAR},
      spu_code = #{spuCode,jdbcType=VARCHAR},
      spu_type = #{spuType,jdbcType=INTEGER},
      category_id = #{categoryId,jdbcType=BIGINT},
      brand_id = #{brandId,jdbcType=BIGINT},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="listTotal" resultType="java.lang.Integer">
    select count(1) from goods_spu
    <where>
      <if test="spuName != null">
        spu_name = #{spuName,jdbcType=VARCHAR},
      </if>
      <if test="spuCode != null">
        spu_code = #{spuCode,jdbcType=VARCHAR},
      </if>
      <if test="spuType != null">
        spu_type = #{spuType,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </where>
  </select>

  <select id="list" resultMap="GoodsSpuOutResultMap">
    select
    <include refid="Base_Column_List" />
    from goods_spu
    <where>
      <if test="spuName != null">
        spu_name = #{spuName,jdbcType=VARCHAR},
      </if>
      <if test="spuCode != null">
        spu_code = #{spuCode,jdbcType=VARCHAR},
      </if>
      <if test="spuType != null">
        spu_type = #{spuType,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </where>
    order by create_time desc
    limit #{start}, #{rows}
  </select>
</mapper>
